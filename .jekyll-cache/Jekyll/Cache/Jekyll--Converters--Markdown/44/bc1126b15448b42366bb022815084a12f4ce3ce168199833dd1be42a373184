I"èm<h1 id="creating-a-logistic-regression-to-predict-absenteeism">Creating a logistic regression to predict absenteeism</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">## This is a more complex python Machine Learning Algorithm for 
#Logistic Regression
</span></code></pre></div></div>
<h2 id="import-the-relevant-libraries">Import the relevant libraries</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
</code></pre></div></div>

<h2 id="load-the-data">Load the data</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_preprocessed</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'Absenteeism_preprocessed.csv'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_preprocessed</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="create-the-targets">Create the targets</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_preprocessed</span><span class="p">[</span><span class="s">'Absenteeism Time in Hours'</span><span class="p">].</span><span class="n">median</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">targets</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">where</span><span class="p">(</span><span class="n">data_preprocessed</span><span class="p">[</span><span class="s">'Absenteeism Time in Hours'</span><span class="p">]</span> <span class="o">&gt;</span> 
                   <span class="n">data_preprocessed</span><span class="p">[</span><span class="s">'Absenteeism Time in Hours'</span><span class="p">].</span><span class="n">median</span><span class="p">(),</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">targets</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_preprocessed</span><span class="p">[</span><span class="s">'Excessive Absenteeism'</span><span class="p">]</span> <span class="o">=</span> <span class="n">targets</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_preprocessed</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="a-comment-on-the-targets">A comment on the targets</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">targets</span><span class="p">.</span><span class="nb">sum</span><span class="p">()</span> <span class="o">/</span> <span class="n">targets</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_with_targets</span> <span class="o">=</span> <span class="n">data_preprocessed</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Absenteeism Time in Hours'</span><span class="p">,</span><span class="s">'Day of the Week'</span><span class="p">,</span>
                                            <span class="s">'Daily Work Load Average'</span><span class="p">,</span><span class="s">'Distance to Work'</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_with_targets</span> <span class="ow">is</span> <span class="n">data_preprocessed</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_with_targets</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="select-the-inputs-for-the-regression">Select the inputs for the regression</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_with_targets</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_with_targets</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,:</span><span class="mi">14</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_with_targets</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">unscaled_inputs</span> <span class="o">=</span> <span class="n">data_with_targets</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="standardize-the-data">Standardize the data</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>

<span class="n">absenteeism_scaler</span> <span class="o">=</span> <span class="n">StandardScaler</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.base</span> <span class="kn">import</span> <span class="n">BaseEstimator</span><span class="p">,</span> <span class="n">TransformerMixin</span>
<span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>

<span class="k">class</span> <span class="nc">CustomScaler</span><span class="p">(</span><span class="n">BaseEstimator</span><span class="p">,</span><span class="n">TransformerMixin</span><span class="p">):</span> 
    
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">columns</span><span class="p">,</span><span class="n">copy</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">with_mean</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">with_std</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">scaler</span> <span class="o">=</span> <span class="n">StandardScaler</span><span class="p">(</span><span class="n">copy</span><span class="p">,</span><span class="n">with_mean</span><span class="p">,</span><span class="n">with_std</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="n">columns</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">mean_</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">var_</span> <span class="o">=</span> <span class="bp">None</span>

    <span class="k">def</span> <span class="nf">fit</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">scaler</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X</span><span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">columns</span><span class="p">],</span> <span class="n">y</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">mean_</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">X</span><span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">columns</span><span class="p">])</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">var_</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">var</span><span class="p">(</span><span class="n">X</span><span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">columns</span><span class="p">])</span>
        <span class="k">return</span> <span class="bp">self</span>

    <span class="k">def</span> <span class="nf">transform</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">copy</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="n">init_col_order</span> <span class="o">=</span> <span class="n">X</span><span class="p">.</span><span class="n">columns</span>
        <span class="n">X_scaled</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">scaler</span><span class="p">.</span><span class="n">transform</span><span class="p">(</span><span class="n">X</span><span class="p">[</span><span class="bp">self</span><span class="p">.</span><span class="n">columns</span><span class="p">]),</span> <span class="n">columns</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">columns</span><span class="p">)</span>
        <span class="n">X_not_scaled</span> <span class="o">=</span> <span class="n">X</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span><span class="o">~</span><span class="n">X</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">isin</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">columns</span><span class="p">)]</span>
        <span class="k">return</span> <span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">X_not_scaled</span><span class="p">,</span> <span class="n">X_scaled</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)[</span><span class="n">init_col_order</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">unscaled_inputs</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">values</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#columns_to_scale = ['Month Value','Day of the Week', 'Transportation Expense', 'Distance to Work',
</span>       <span class="c1">#'Age', 'Daily Work Load Average', 'Body Mass Index', 'Children', 'Pet']
</span>
<span class="n">columns_to_omit</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Reason_1'</span><span class="p">,</span> <span class="s">'Reason_2'</span><span class="p">,</span> <span class="s">'Reason_3'</span><span class="p">,</span> <span class="s">'Reason_4'</span><span class="p">,</span><span class="s">'Education'</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">columns_to_scale</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">unscaled_inputs</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">values</span> <span class="k">if</span> <span class="n">x</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">columns_to_omit</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">absenteeism_scaler</span> <span class="o">=</span> <span class="n">CustomScaler</span><span class="p">(</span><span class="n">columns_to_scale</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">absenteeism_scaler</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">unscaled_inputs</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">scaled_inputs</span> <span class="o">=</span> <span class="n">absenteeism_scaler</span><span class="p">.</span><span class="n">transform</span><span class="p">(</span><span class="n">unscaled_inputs</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">scaled_inputs</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">scaled_inputs</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<h2 id="split-the-data-into-train--test-and-shuffle">Split the data into train &amp; test and shuffle</h2>

<h3 id="import-the-relevant-module">Import the relevant module</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
</code></pre></div></div>

<h3 id="split">Split</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">train_test_split</span><span class="p">(</span><span class="n">scaled_inputs</span><span class="p">,</span> <span class="n">targets</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x_train</span><span class="p">,</span> <span class="n">x_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">scaled_inputs</span><span class="p">,</span> <span class="n">targets</span><span class="p">,</span> <span class="c1">#train_size = 0.8, 
</span>                                                                            <span class="n">test_size</span> <span class="o">=</span> <span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span> <span class="o">=</span> <span class="mi">20</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span> <span class="p">(</span><span class="n">x_train</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">y_train</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span> <span class="p">(</span><span class="n">x_test</span><span class="p">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">y_test</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="logistic-regression-with-sklearn">Logistic regression with sklearn</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.linear_model</span> <span class="kn">import</span> <span class="n">LogisticRegression</span>
<span class="kn">from</span> <span class="nn">sklearn</span> <span class="kn">import</span> <span class="n">metrics</span>
</code></pre></div></div>

<h3 id="training-the-model">Training the model</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span> <span class="o">=</span> <span class="n">LogisticRegression</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span><span class="n">y_train</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">x_train</span><span class="p">,</span><span class="n">y_train</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="manually-check-the-accuracy">Manually check the accuracy</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model_outputs</span> <span class="o">=</span> <span class="n">reg</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">x_train</span><span class="p">)</span>
<span class="n">model_outputs</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">y_train</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model_outputs</span> <span class="o">==</span> <span class="n">y_train</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">((</span><span class="n">model_outputs</span><span class="o">==</span><span class="n">y_train</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model_outputs</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">((</span><span class="n">model_outputs</span><span class="o">==</span><span class="n">y_train</span><span class="p">))</span> <span class="o">/</span> <span class="n">model_outputs</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</code></pre></div></div>

<h3 id="finding-the-intercept-and-coefficients">Finding the intercept and coefficients</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="p">.</span><span class="n">intercept_</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="p">.</span><span class="n">coef_</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">unscaled_inputs</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">values</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">feature_name</span> <span class="o">=</span> <span class="n">unscaled_inputs</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">values</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary_table</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span> <span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'Feature name'</span><span class="p">],</span> <span class="n">data</span> <span class="o">=</span> <span class="n">feature_name</span><span class="p">)</span>

<span class="n">summary_table</span><span class="p">[</span><span class="s">'Coefficient'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">transpose</span><span class="p">(</span><span class="n">reg</span><span class="p">.</span><span class="n">coef_</span><span class="p">)</span>

<span class="n">summary_table</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary_table</span><span class="p">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">summary_table</span><span class="p">.</span><span class="n">index</span> <span class="o">+</span> <span class="mi">1</span>
<span class="n">summary_table</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Intercept'</span><span class="p">,</span> <span class="n">reg</span><span class="p">.</span><span class="n">intercept_</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span>
<span class="n">summary_table</span> <span class="o">=</span> <span class="n">summary_table</span><span class="p">.</span><span class="n">sort_index</span><span class="p">()</span>
<span class="n">summary_table</span>
</code></pre></div></div>

<h2 id="interpreting-the-coefficients">Interpreting the coefficients</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary_table</span><span class="p">[</span><span class="s">'Odds_ratio'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="n">summary_table</span><span class="p">.</span><span class="n">Coefficient</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary_table</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary_table</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'Odds_ratio'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="testing-the-model">Testing the model</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">reg</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">x_test</span><span class="p">,</span><span class="n">y_test</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">predicted_proba</span> <span class="o">=</span> <span class="n">reg</span><span class="p">.</span><span class="n">predict_proba</span><span class="p">(</span><span class="n">x_test</span><span class="p">)</span>
<span class="n">predicted_proba</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">predicted_proba</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">predicted_proba</span><span class="p">[:,</span><span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="save-the-model">Save the model</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pickle</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'model'</span><span class="p">,</span> <span class="s">'wb'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">pickle</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">reg</span><span class="p">,</span> <span class="nb">file</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'scaler'</span><span class="p">,</span><span class="s">'wb'</span><span class="p">)</span> <span class="k">as</span> <span class="nb">file</span><span class="p">:</span>
    <span class="n">pickle</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">absenteeism_scaler</span><span class="p">,</span> <span class="nb">file</span><span class="p">)</span>
</code></pre></div></div>
:ET